// <auto-generated />
using System;
using Lurnyx.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lurnyx.Data.Migrations
{
    [DbContext(typeof(LurnyxDBContext))]
    [Migration("20250701124716_PasswordResetTokenSoftDeletable")]
    partial class PasswordResetTokenSoftDeletable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Lurnyx.Data.Models.ResourceMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("FileAccessUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("FileSize")
                        .HasColumnType("integer");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Metadata")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("TopicId")
                        .HasDatabaseName("idx_resource_topic");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ResourceMaterial", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            FileAccessUrl = "https://gxedokotpvohancdflmb.supabase.co/storage/v1/object/public/lurnyx-files/seeder-files/dummy.pdf",
                            FileSize = 13264,
                            FileType = "PDF",
                            Metadata = "1 page",
                            Name = "Setup Guide",
                            TopicId = 3,
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            FileAccessUrl = "https://gxedokotpvohancdflmb.supabase.co/storage/v1/object/public/lurnyx-files/seeder-files/png.png",
                            FileSize = 7347,
                            FileType = "PNG",
                            Metadata = "1 diagram",
                            Name = "MVC Diagram",
                            TopicId = 4,
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            FileAccessUrl = "https://gxedokotpvohancdflmb.supabase.co/storage/v1/object/public/lurnyx-files/seeder-files/sample1.pptx",
                            FileSize = 34789,
                            FileType = "PPTX",
                            Metadata = "1 slide",
                            Name = "Sample PowerPoint Presentation",
                            TopicId = 5,
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2
                        });
                });

            modelBuilder.Entity("Lurnyx.Data.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CoverImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("DurationInMinutes")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TrainingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("TrainingId")
                        .HasDatabaseName("idx_topic_training");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Topic", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoverImageUrl = "https://placehold.co/344x242/png",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            Description = "An overview of programming concepts.",
                            DurationInMinutes = 25,
                            Order = 1,
                            Title = "What is Programming?",
                            TrainingId = 1,
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2,
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 2,
                            CoverImageUrl = "https://placehold.co/344x242/png",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            Description = "Understanding how to store information.",
                            DurationInMinutes = 45,
                            Order = 2,
                            Title = "Variables and Data Types",
                            TrainingId = 1,
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2,
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 3,
                            CoverImageUrl = "https://placehold.co/344x242/png",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            Description = "Setting up your development environment.",
                            DurationInMinutes = 30,
                            Order = 1,
                            Title = "Getting Started",
                            TrainingId = 6,
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2,
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 4,
                            CoverImageUrl = "https://placehold.co/344x242/png",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            Description = "The Model-View-Controller pattern.",
                            DurationInMinutes = 60,
                            Order = 2,
                            Title = "Understanding MVC",
                            TrainingId = 6,
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2,
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 5,
                            CoverImageUrl = "https://placehold.co/344x242/png",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            Description = "Using Entity Framework Core.",
                            DurationInMinutes = 90,
                            Order = 3,
                            Title = "Working with Data",
                            TrainingId = 6,
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2,
                            ViewCount = 0
                        });
                });

            modelBuilder.Entity("Lurnyx.Data.Models.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CoverImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsFeatured")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TrainingCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("Title")
                        .HasDatabaseName("idx_training_title");

                    b.HasIndex("TrainingCategoryId")
                        .HasDatabaseName("idx_training_category");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Training", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoverImageUrl = "https://placehold.co/600x300/png",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            Description = "Learn the basics of programming.",
                            Difficulty = "BEGINNER",
                            IsFeatured = true,
                            Title = "Introduction to Programming",
                            TrainingCategoryId = 1,
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2,
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 2,
                            CoverImageUrl = "https://placehold.co/600x300/png",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            Description = "Deep dive into data science techniques.",
                            Difficulty = "ADVANCED",
                            IsFeatured = true,
                            Title = "Advanced Data Science",
                            TrainingCategoryId = 2,
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2,
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 3,
                            CoverImageUrl = "https://placehold.co/600x300/png",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            Description = "Build modern web applications.",
                            Difficulty = "INTERMEDIATE",
                            IsFeatured = false,
                            Title = "Web Development Essentials",
                            TrainingCategoryId = 3,
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2,
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 4,
                            CoverImageUrl = "https://placehold.co/600x300/png",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            Description = "Create mobile applications for Android and iOS.",
                            Difficulty = "INTERMEDIATE",
                            IsFeatured = true,
                            Title = "Mobile App Development",
                            TrainingCategoryId = 4,
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2,
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 5,
                            CoverImageUrl = "https://placehold.co/600x300/png",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            Description = "Learn the fundamentals of machine learning.",
                            Difficulty = "BEGINNER",
                            IsFeatured = false,
                            Title = "Machine Learning Basics",
                            TrainingCategoryId = 5,
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2,
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 6,
                            CoverImageUrl = "https://placehold.co/600x300/png",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            Description = "Build modern web apps with .NET.",
                            Difficulty = "BEGINNER",
                            IsFeatured = true,
                            Title = "Introduction to ASP.NET Core",
                            TrainingCategoryId = 3,
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2,
                            ViewCount = 0
                        });
                });

            modelBuilder.Entity("Lurnyx.Data.Models.TrainingCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CoverImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("TrainingCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoverImageUrl = "https://placehold.co/600x400/png",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            Description = "Learn programming languages",
                            Name = "Programming",
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2
                        },
                        new
                        {
                            Id = 2,
                            CoverImageUrl = "https://placehold.co/600x400/png",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            Description = "Explore data science concepts",
                            Name = "Data Science",
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2
                        },
                        new
                        {
                            Id = 3,
                            CoverImageUrl = "https://placehold.co/600x400/png",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            Description = "Build modern web applications",
                            Name = "Web Development",
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2
                        },
                        new
                        {
                            Id = 4,
                            CoverImageUrl = "https://placehold.co/600x400/png",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            Description = "Create mobile applications",
                            Name = "Mobile Development",
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2
                        },
                        new
                        {
                            Id = 5,
                            CoverImageUrl = "https://placehold.co/600x400/png",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            Description = "Learn machine learning techniques",
                            Name = "Machine Learning",
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2
                        });
                });

            modelBuilder.Entity("Lurnyx.Data.Models.TrainingRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("TrainingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy")
                        .HasDatabaseName("idx_training_rating_user");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("TrainingId")
                        .HasDatabaseName("idx_rating_training");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("TrainingRating", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comments = "Excellent course for beginners!",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 4,
                            Rating = 5,
                            TrainingId = 1,
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 4
                        },
                        new
                        {
                            Id = 2,
                            Comments = "Good content, but could use more examples.",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 5,
                            Rating = 4,
                            TrainingId = 1,
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 5
                        },
                        new
                        {
                            Id = 3,
                            Comments = "Very detailed and informative.",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 4,
                            Rating = 5,
                            TrainingId = 2,
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 4
                        },
                        new
                        {
                            Id = 4,
                            Comments = "Great introduction to .NET!",
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 5,
                            Rating = 5,
                            TrainingId = 6,
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 5
                        });
                });

            modelBuilder.Entity("Lurnyx.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProfileImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 1,
                            Email = "superadmin@lurnyx.com",
                            FirstName = "Super",
                            LastName = "Admin",
                            Password = "$2a$12$YGAnB6p3SSSmX0qP9f0kJe1iy6zHSiVkcVcS7O6vIoGHzg0sJKmcK",
                            ProfileImageUrl = "https://placehold.co/400x400/png",
                            Role = "SUPER_ADMIN",
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 2,
                            Email = "admin@lurnyx.com",
                            FirstName = "Admin",
                            LastName = "User",
                            Password = "$2a$12$zYfYrk0XdNS5N1P6pGt6EeL.AHwJ1w8cXc/Tx3qb4zXkOs1rzec/y",
                            ProfileImageUrl = "https://placehold.co/400x400/png",
                            Role = "ADMIN",
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 3,
                            Email = "user@lurnyx.com",
                            FirstName = "Generic",
                            LastName = "User",
                            Password = "$2a$12$6WlpTr/KftpEmDKC/8ZrfORiKaG9dF0W2LGUj1AzhklNe7xEez1Em",
                            ProfileImageUrl = "https://placehold.co/400x400/png",
                            Role = "USER",
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 1,
                            Email = "john.doe@lurnyx.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "$2a$12$2OUUt6xPaM30jF7m7z4T2.IKAaOePsS5G5DiciDYWt2RMrlC2a9e6",
                            ProfileImageUrl = "https://placehold.co/400x400/png",
                            Role = "USER",
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = 1,
                            Email = "jane.smith@lurnyx.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            Password = "$2a$12$JTvstgwWvVHBUQcqrFNYf.DZGTos7CBUhKRuRuX0rqbHMitapCq3e",
                            ProfileImageUrl = "https://placehold.co/400x400/png",
                            Role = "USER",
                            UpdatedAt = new DateTime(2025, 7, 1, 12, 47, 14, 388, DateTimeKind.Utc).AddTicks(3243),
                            UpdatedBy = 1
                        });
                });

            modelBuilder.Entity("Lurnyx.Data.Models.UserResourceDownload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("DownloadCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("FirstDownloadedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastDownloadedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResourceMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy")
                        .HasDatabaseName("idx_download_user");

                    b.HasIndex("LastDownloadedAt")
                        .HasDatabaseName("idx_download_time");

                    b.HasIndex("ResourceMaterialId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("UserResourceDownload", (string)null);
                });

            modelBuilder.Entity("Lurnyx.Data.Models.UserTopicProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastAccessedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("LastAccessedAt")
                        .HasDatabaseName("idx_topic_access_time");

                    b.HasIndex("Status")
                        .HasDatabaseName("idx_topic_progress_status");

                    b.HasIndex("TopicId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("CreatedBy", "TopicId")
                        .IsUnique()
                        .HasFilter("[CreatedBy] IS NOT NULL");

                    b.ToTable("UserTopicProgress", (string)null);
                });

            modelBuilder.Entity("Lurnyx.Data.Models.UserTrainingProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastAccessedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TrainingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("LastAccessedAt")
                        .HasDatabaseName("idx_training_access_time");

                    b.HasIndex("Status")
                        .HasDatabaseName("idx_training_progress_status");

                    b.HasIndex("TrainingId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("CreatedBy", "TrainingId")
                        .IsUnique()
                        .HasFilter("[CreatedBy] IS NOT NULL");

                    b.ToTable("UserTrainingProgress", (string)null);
                });

            modelBuilder.Entity("PasswordResetToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("PasswordResetToken", (string)null);
                });

            modelBuilder.Entity("Lurnyx.Data.Models.ResourceMaterial", b =>
                {
                    b.HasOne("Lurnyx.Data.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Lurnyx.Data.Models.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("Lurnyx.Data.Models.Topic", "Topic")
                        .WithMany("ResourceMaterials")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lurnyx.Data.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Topic");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Lurnyx.Data.Models.Topic", b =>
                {
                    b.HasOne("Lurnyx.Data.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Lurnyx.Data.Models.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("Lurnyx.Data.Models.Training", "Training")
                        .WithMany("Topics")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lurnyx.Data.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Training");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Lurnyx.Data.Models.Training", b =>
                {
                    b.HasOne("Lurnyx.Data.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Lurnyx.Data.Models.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("Lurnyx.Data.Models.TrainingCategory", "TrainingCategory")
                        .WithMany("Trainings")
                        .HasForeignKey("TrainingCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Lurnyx.Data.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("TrainingCategory");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Lurnyx.Data.Models.TrainingCategory", b =>
                {
                    b.HasOne("Lurnyx.Data.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Lurnyx.Data.Models.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("Lurnyx.Data.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Lurnyx.Data.Models.TrainingRating", b =>
                {
                    b.HasOne("Lurnyx.Data.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Lurnyx.Data.Models.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("Lurnyx.Data.Models.Training", "Training")
                        .WithMany("Ratings")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lurnyx.Data.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Training");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Lurnyx.Data.Models.User", b =>
                {
                    b.HasOne("Lurnyx.Data.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Lurnyx.Data.Models.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("Lurnyx.Data.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Lurnyx.Data.Models.UserResourceDownload", b =>
                {
                    b.HasOne("Lurnyx.Data.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Lurnyx.Data.Models.ResourceMaterial", "ResourceMaterial")
                        .WithMany()
                        .HasForeignKey("ResourceMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lurnyx.Data.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("CreatedByUser");

                    b.Navigation("ResourceMaterial");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Lurnyx.Data.Models.UserTopicProgress", b =>
                {
                    b.HasOne("Lurnyx.Data.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Lurnyx.Data.Models.Topic", "Topic")
                        .WithMany("UserProgresses")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lurnyx.Data.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Topic");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Lurnyx.Data.Models.UserTrainingProgress", b =>
                {
                    b.HasOne("Lurnyx.Data.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Lurnyx.Data.Models.Training", "Training")
                        .WithMany("UserProgresses")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lurnyx.Data.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Training");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("PasswordResetToken", b =>
                {
                    b.HasOne("Lurnyx.Data.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Lurnyx.Data.Models.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("Lurnyx.Data.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Lurnyx.Data.Models.Topic", b =>
                {
                    b.Navigation("ResourceMaterials");

                    b.Navigation("UserProgresses");
                });

            modelBuilder.Entity("Lurnyx.Data.Models.Training", b =>
                {
                    b.Navigation("Ratings");

                    b.Navigation("Topics");

                    b.Navigation("UserProgresses");
                });

            modelBuilder.Entity("Lurnyx.Data.Models.TrainingCategory", b =>
                {
                    b.Navigation("Trainings");
                });
#pragma warning restore 612, 618
        }
    }
}
