@using Lurnyx.Data.Models
@using Lurnyx.Services.ServiceModels
@using System.Web

@model PaginatedList<TrainingDto>
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewData["Title"] = "Manage Trainings";
}

<!-- Backdrop Blur Overlay -->
<div id="modalBackdrop" class="hidden fixed inset-0 backdrop-blur-xs z-40"></div>
<!-- Delete Confirmation Modal -->
<div id="popupModal" tabindex="-1" class="hidden fixed inset-0 z-50 flex items-center justify-center p-4">
    <div class="relative w-full max-w-lg">
        <form id="deleteForm" asp-action="Delete" asp-controller="Training" method="POST"
            class="relative bg-white rounded-xl shadow-xl p-6">
            @Html.AntiForgeryToken()
            <input type="hidden" id="trainingId" name="id" />
            <div class="flex items-center justify-between mb-4">
                <h1 class="text-2xl font-bold text-gray-800">Delete Training </h1>
                <button type="button" onclick="hideModal()"
                    class="text-gray-400 hover:text-gray-500 rounded-full p-1 hover:bg-gray-100 transition-colors">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
            <div class="space-y-4">
                <div class="flex flex-col items-center text-center">
                    <div class="p-3 bg-red-100 rounded-full mb-3">
                        <svg class="w-8 h-8 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                        </svg>
                    </div>
                    <h3 class="text-xl font-medium text-gray-800">Are you sure?</h3>
                    <p class="text-gray-600 text-md">You are about to delete the training "<span id="modalTrainingName"
                            class="font-bold text-gray-800"></span>".</p>
                </div>
                <div class="max-w-xl bg-red-100 rounded-lg border border-red-300 p-4 flex items-start gap-3">
                    <div>
                        <p class="text-red-800 font-bold">WARNING: <span class="font-normal">This will also delete all
                                topics associated with this training. This action cannot be undone.</span></p>
                    </div>
                </div>
                <div class="flex gap-3 mt-6">
                    <button type="button" onclick="hideModal()"
                        class="flex-1 py-2.5 px-4 text-sm font-medium text-gray-700 bg-white rounded-lg border border-gray-300 hover:bg-gray-50">Cancel</button>
                    <button type="submit"
                        class="flex-1 py-2.5 px-4 text-sm font-medium text-white bg-red-600 rounded-lg hover:bg-red-700">Delete
                        Training</button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="container px-4 pt-2 py-4 mx-auto">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-bold text-gray-800">Manage Trainings</h1>
        <a asp-action="Create" asp-controller="Training"
            class="group flex items-center focus:outline-none transition-transform hover:scale-105">
            <span
                class="flex items-center bg-[#1F7A8C] text-white px-5 py-2.5 rounded-lg shadow-md hover:bg-[#195b69] transition-all duration-300 hover:shadow-lg font-bold">
                <i class="fas fa-plus mr-2"></i> Add Training
            </span>
        </a>
    </div>

    <!-- Updated Search Form -->
    <form asp-action="Index" asp-controller="Training" method="get" id="searchForm"
          class="bg-white rounded-lg border border-gray-200 p-6 shadow-sm mb-6">
        <div class="flex flex-col md:flex-row gap-4 items-end">
            <!-- Search Input with Clear Button -->
            <div class="relative flex-grow w-full md:w-auto">
                <div class="relative">
                    <input type="text" id="searchQuery" name="searchQuery" placeholder="Search by training title..."
                           class="h-11 px-4 pr-8 rounded-lg border border-gray-300 appearance-none focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 w-full shadow-sm bg-white text-gray-700 transition-all duration-200 peer"
                           value="@ViewData["CurrentSearch"]">
                    <!-- Search Icon (hidden when input has value) -->
                    <div class="absolute right-3 top-3 peer-[&:not(:placeholder-shown)]:hidden">
                        <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                  d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                        </svg>
                    </div>
                    <!-- Clear Button (only visible when there's text) -->
                    <button type="button" onclick="clearSearchBar()"
                            class="absolute right-3 top-3 text-gray-400 hover:text-gray-600 hidden peer-[&:not(:placeholder-shown)]:block">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Category Filter -->
            <div class="relative w-full md:w-auto">
                <select id="categoryId" name="categoryId" asp-items="@(ViewData["TrainingCategories"] as SelectList)"
                        class="h-11 px-4 pr-8 rounded-lg border border-gray-300 appearance-none focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 w-full shadow-sm bg-white text-gray-700 transition-all duration-200">
                    <option value="">All Categories</option>
                </select>
                <div class="absolute right-3 top-3 pointer-events-none">
                    <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                    </svg>
                </div>
            </div>

            <!-- Rating Filter -->
            <div class="relative w-full md:w-auto">
                <select id="rating" name="rating" asp-items="@(ViewData["Ratings"] as SelectList)"
                        class="h-11 px-4 pr-8 rounded-lg border border-gray-300 appearance-none focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 w-full shadow-sm bg-white text-gray-700 transition-all duration-200">
                    <option value="">All Ratings</option>
                </select>
                <div class="absolute right-3 top-3 pointer-events-none">
                    <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                    </svg>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="flex gap-3 w-full md:w-auto">
                <button type="submit"
                        class="group flex items-center bg-[#1F7A8C] text-white px-5 py-2.5 rounded-lg shadow-md hover:bg-[#195b69] h-11">
                    <i class="fas fa-search mr-2"></i>
                    Search
                </button>
                <!-- Clear All Button -->
                @if (!string.IsNullOrEmpty(ViewData["CurrentSearch"]?.ToString()) ||
                                !string.IsNullOrEmpty(Context.Request.Query["categoryId"]) ||
                                !string.IsNullOrEmpty(Context.Request.Query["rating"]))
                {
                    <button type="button" onclick="clearAllFilters()"
                            class="h-11 px-4 flex items-center border border-[#1f7a8c] text-[#1f7a8c] hover:bg-gray-100 rounded-lg transition-colors cursor-pointer">
                        Clear all
                    </button>
                }
            </div>
        </div>
    </form>
    <div class="bg-transparent shadow rounded-lg w-full">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 p-4">
            @if (Model != null && Model.Items.Any())
            {
                @foreach (var training in Model.Items)
                {
                    <div
                        class="w-full h-full bg-white rounded-xl shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300 flex flex-col">
                        <div class="relative">
                            <img class="w-full h-48 object-cover"
                                src="@(Url.Content(training.CoverImageUrl ?? "https://placehold.co/400x250?text=No+Image"))"
                                alt="Cover for @training.Title" />
                            <div class="absolute top-3 right-3">
                                <button
                                    class="bg-white/90 rounded-full w-8 h-8 flex items-center justify-center shadow-sm hover:bg-gray-100 transition-colors dropdown-button"
                                    data-dropdown="dropdownMenu-@training.Id">
                                    @* This design is actually better than the previous one, it's minimalist style, thus retained *@
                                    <i class="fas fa-ellipsis-v text-gray-600"></i>
                                </button>
                                <div id="dropdownMenu-@training.Id"
                                    class="hidden absolute right-0 mt-2 z-10 w-32 bg-white rounded-md shadow-lg py-1 border border-gray-200">
                                    <a asp-action="Details" asp-controller="Training" asp-route-id="@training.Id"
                                        class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"><i
                                            class="fas fa-eye w-5 mr-2 text-blue-500"></i>View</a>
                                    <a asp-action="Edit" asp-controller="Training" asp-route-id="@training.Id"
                                        class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"><i
                                            class="fas fa-edit w-5 mr-2 text-green-500"></i>Edit</a>
                                    <button
                                        onclick="showModal('@training.Id', '@HttpUtility.JavaScriptStringEncode(training.Title)')"
                                        class="w-full text-left flex items-center px-4 py-2 text-sm text-red-600 hover:bg-gray-100"><i
                                            class="fas fa-trash-alt w-5 mr-2"></i>Delete</button>
                                </div>
                            </div>
                        </div>
                        <div class="px-5 py-4 flex flex-col flex-grow">
                            <div class="mb-3">
                                <span
                                    class="inline-block text-xs px-2 py-1 rounded-md @(training.TrainingCategory == null ? "bg-gray-200 text-gray-600" : "bg-[#bfdbf7]/90 text-gray-800")">
                                    @(training.TrainingCategory?.Name ?? "Unassigned")
                                </span>
                            </div>
                            <h3 class="text-lg font-bold text-gray-900 mb-1 uppercase">@training.Title</h3>
                            <div class="flex justify-start space-x-5 mb-3">
                                <div class="text-center">
                                    <p class="text-xl font-bold text-gray-800">@training.AverageRating.ToString("0.00")</p>
                                    <p class="text-xs text-gray-500">Rated by @training.RatingCount</p>
                                </div>
                                <div class="text-center">
                                    <p class="text-xl font-bold text-gray-800">@training.Topics.Count</p>
                                    <p class="text-xs text-gray-500">@(training.Topics.Count < 2 ? "Topic" : "Topics")</p>
                                </div>
                            </div>
                            <p class="text-sm text-gray-600 line-clamp-2 mb-4">@training.Description</p>
                            <div class="flex justify-between items-center text-sm text-gray-500 border-t border-gray-200 pt-3">
                                <div class="flex items-center"><i
                                        class="fas fa-user-tie mr-2 text-gray-400"></i><span>@training.Author</span></div>
                                <div class="flex items-center"><i
                                        class="fas fa-calendar-week mr-2 text-gray-400"></i><span>@training.UpdatedAt.ToString("MM/dd/yyyy")</span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="col-span-full text-center py-12">
                    <p class="text-gray-500">No trainings found.</p>
                </div>
            }
        </div>
        <!-- Pass the Model directly to the partial view -->
        <partial name="_Pagination" model="Model" />
    </div>
</div>

@section Scripts {
    <partial name="_ToastError" />
    <script>
        document.addEventListener('click', function (e) {
            const dropdownButtons = document.querySelectorAll('.dropdown-button');
            const dropdownMenus = document.querySelectorAll('[id^="dropdownMenu-"]');
            let isClickInside = false;
            dropdownButtons.forEach(button => {
                if (button.contains(e.target)) {
                    isClickInside = true;
                    const dropdownId = button.getAttribute('data-dropdown');
                    const dropdownMenu = document.getElementById(dropdownId);
                    const isHidden = dropdownMenu.classList.contains('hidden');
                    dropdownMenus.forEach(menu => menu.classList.add('hidden'));
                    if (isHidden) {
                        dropdownMenu.classList.remove('hidden');
                    }
                }
            });
            if (!isClickInside) {
                dropdownMenus.forEach(menu => menu.classList.add('hidden'));
            }
        });

        function showModal(trainingId, trainingName) {
            document.getElementById('modalTrainingName').textContent = trainingName;
            document.getElementById('trainingId').value = trainingId;
            document.getElementById('popupModal').classList.remove('hidden');
            document.getElementById('modalBackdrop').classList.remove('hidden');
        }

        function hideModal() {
            document.getElementById('popupModal').classList.add('hidden');
            document.getElementById('modalBackdrop').classList.add('hidden');
        }

        function clearSearchBar() {
            const searchInput = document.getElementById('searchQuery');
            searchInput.value = '';
            searchInput.dispatchEvent(new Event('input'));
        }

        function clearAllFilters() {
            // Get the base URL without query parameters
            const baseUrl = window.location.origin + '@Url.Action("Index", "Training")';

            // Navigate to the clean URL
            window.location.href = baseUrl;
        }
    </script>
}
