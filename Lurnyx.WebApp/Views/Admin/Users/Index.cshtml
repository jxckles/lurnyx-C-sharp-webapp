@using Lurnyx.Data.Models
@using Lurnyx.Services.ServiceModels
@using static Lurnyx.Resources.Constants.Enums

@model PaginatedList<UserDto>
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewData["Title"] = "User Accounts";
}

<!-- Backdrop Blur Overlay -->
<div id="modalBackdrop" class="hidden fixed inset-0 backdrop-blur-xs z-40"></div>
<!-- Delete Confirmation Modal -->
<div id="popupModal" tabindex="-1" class="hidden fixed inset-0 z-50 flex items-center justify-center p-4"
    data-modal-backdrop="static">
    <div class="relative w-full max-w-lg">
        <div class="relative bg-white rounded-xl shadow-xl p-6">
            <!-- Modal Header -->
            <div class="flex items-center justify-between mb-4">
                <h1 class="text-2xl font-bold text-gray-800">Delete User</h1>
                <button type="button" onclick="hideModal()"
                    class="text-gray-400 hover:text-gray-500 rounded-full p-1 hover:bg-gray-100 transition-colors">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>

            <!-- Modal Content -->
            <div class="space-y-4">
                <div class="flex flex-col items-center text-center">
                    <div class="p-3 bg-red-100 rounded-full mb-3">
                        <svg class="w-8 h-8 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                        </svg>
                    </div>
                    <h3 class="text-xl font-medium text-gray-800">Are you sure?</h3>
                    <p class="text-gray-600 text-lg">You are about to delete the user "<span id="userToDelete"
                            class="font-bold text-gray-800"></span>". This action cannot be undone.</p>
                </div>

                <!-- User Details Card -->
                <div class="border border-gray-200 rounded-lg p-4 space-y-3 bg-gray-50">
                    <div class="flex justify-between"><span class="text-sm font-medium text-gray-600">User
                            ID:</span><span id="userIdDisplay" class="text-sm font-semibold text-gray-800"></span></div>
                    <div class="flex justify-between"><span class="text-sm font-medium text-gray-600">Email:</span><span
                            id="userEmailDisplay" class="text-sm font-semibold text-gray-800"></span></div>
                    <div class="flex justify-between"><span class="text-sm font-medium text-gray-600">Role:</span><span
                            id="userRoleDisplay" class="text-sm font-semibold text-gray-800"></span></div>
                </div>

                <!-- Action Buttons -->
                <form id="deleteForm" method="POST" asp-action="Delete" asp-controller="Users" class="flex gap-3 mt-6">
                    <input type="hidden" id="userId" name="id" value="" />
                    <button type="button" onclick="hideModal()"
                        class="flex-1 py-2.5 px-4 text-sm font-medium text-gray-700 bg-white rounded-lg border border-gray-300 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-all">Cancel</button>
                    <button type="submit"
                        class="flex-1 py-2.5 px-4 text-sm font-medium text-white bg-red-600 rounded-lg border border-transparent hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-all">Delete
                        User</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Users Table -->
<div class="container px-4 pt-2 mx-auto">
    <!-- Page Heading -->
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-bold text-gray-800">User Management</h1>
        <a asp-action="Create" asp-controller="Users"
            class="group flex items-center bg-[#1F7A8C] text-white px-5 py-2.5 rounded-lg shadow-md hover:bg-[#195b69] transition-all duration-300 hover:shadow-lg font-bold">
            <i class="fas fa-plus mr-2"></i>
            Add User
        </a>
    </div>

<!-- Updated Search Form -->
<form asp-action="Index" asp-controller="Users" method="get" id="searchForm"
      class="bg-white rounded-lg border border-gray-200 p-6 shadow-sm mb-8">
    <div class="flex flex-col md:flex-row gap-4 items-end">
        <!-- Search Input with Clear Button -->
        <div class="relative flex-grow w-full md:w-auto">
            <div class="relative">
                <input type="text" id="searchQuery" name="searchQuery" placeholder="Search by name or email..."
                       class="h-11 px-4 pr-8 rounded-lg border border-gray-300 appearance-none focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 w-full shadow-sm bg-white text-gray-700 transition-all duration-200 peer"
                       value="@ViewData["CurrentSearch"]">
                <!-- Search Icon (hidden when input has value) -->
                <div class="absolute right-3 top-3 peer-[&:not(:placeholder-shown)]:hidden">
                    <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                    </svg>
                </div>
                <!-- Clear Search Button -->
                <button type="button" onclick="clearSearchBar()"
                        class="absolute right-3 top-3 text-gray-400 hover:text-gray-600 hidden peer-[&:not(:placeholder-shown)]:block">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
        </div>

        <!-- Filter by User Role -->
        <div class="relative w-full md:w-auto">
            <select id="userRoleFilter" name="userRoleFilter"
                    class="h-11 px-4 pr-8 rounded-lg border border-gray-300 appearance-none focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 w-full shadow-sm bg-white text-gray-700 transition-all duration-200">
                <option value="" selected="@(ViewData["CurrentRoleFilter"] == null)">All User Roles</option>
                <option value="Admin" selected="@(ViewData["CurrentRoleFilter"]?.ToString() == "Admin")">Admin</option>
                <option value="User" selected="@(ViewData["CurrentRoleFilter"]?.ToString() == "User")">User</option>
            </select>
            <div class="absolute right-3 top-3 pointer-events-none">
                <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                </svg>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="flex gap-3 w-full md:w-auto">
            <button type="submit"
                    class="group flex items-center bg-[#1F7A8C] text-white px-5 py-2.5 rounded-lg shadow-md hover:bg-[#195b69] transition-all duration-300 hover:shadow-lg font-medium h-11">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24"
                     stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
                Search
            </button>
            <!-- Clear All Button -->
            @if (!string.IsNullOrEmpty(ViewData["CurrentSearch"]?.ToString()) || !string.IsNullOrEmpty(ViewData["CurrentRoleFilter"]?.ToString()))
            {
                <button type="button" onclick="clearAllFilters()"
                        class="h-11 px-4 flex items-center border border-[#1f7a8c] text-[#1f7a8c] hover:bg-gray-100 rounded-lg transition-colors cursor-pointer">
                    Clear all
                </button>
            }
        </div>
    </div>
</form>

<div class="bg-white shadow rounded-lg w-full">
    <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
            <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">First Name
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Last Name
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider items-start justify-start">
                    <div class="flex items-center">
                        Modified Date
                        <!-- Heroicon: solid/chevron-down (descending order) -->
                        <svg class="w-4 h-4 ml-1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                        </svg>
                    </div>
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
            </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200 overflow-visible z-0">
            @if (Model != null && Model.Items.Any())
            {
                @foreach (var user in Model.Items)
                {
                    <tr class="overflow-visible">
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">@user.FirstName</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">@user.LastName</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@user.Email</td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span
                                class=" rounded-full text-sm font-medium text-left">
                                @user.Role.ToString().Replace("_", " ").ToUpper()
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@user.UpdatedAt.ToString("MM/dd/yyyy")
                        </td>
                        <td class="px-6 py-4 overflow-visible relative">
                            <div class="relative inline-block text-left">
                                <div>
                                    <button type="button" onclick="toggleDropdown(this)"
                                        class="inline-flex items-center gap-x-1.5 rounded-md bg-white px-3 py-2 text-sm font-medium text-gray-500 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500">
                                        Actions
                                        <svg class="-mr-1 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor"
                                            aria-hidden="true">
                                            <path fill-rule="evenodd"
                                                d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z"
                                                clip-rule="evenodd" />
                                        </svg>
                                    </button>
                                </div>
                                <!--  FIX: Changed id="dropdownMenu" to class="dropdown-menu"  to avoid duplicate IDs in the HTML, which is invalid.-->
                                <div
                                    class="dropdown-menu hidden absolute right-0 z-50 mt-2 w-auto origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none">
                                    <div class="py-1" role="none">
                                        <a asp-action="Details" asp-route-id="@user.Id"
                                            class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"><i
                                                class="fas fa-eye mr-3 text-gray-500 w-4 text-center"></i> View</a>
                                        <a asp-action="Edit" asp-route-id="@user.Id"
                                            class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"><i
                                                class="fas fa-edit mr-3 text-blue-500 w-4 text-center"></i> Edit</a>
                                        <button type="button"
                                            onclick="showDeleteModal('@user.Id', '@user.FirstName @user.LastName', 'USER-@user.Id.ToString("00")', '@user.Email', '@user.Role')"
                                            class="flex items-center w-full px-4 py-2 text-sm text-red-600 hover:bg-gray-100"><i
                                                class="fas fa-trash-alt mr-3 w-4 text-center"></i> Delete</button>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6" class="px-6 py-4 text-center text-sm text-gray-500">No users found</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pass the Model directly to the partial view -->
    <partial name="_Pagination" model="Model" />
</div>

</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <partial name="_ToastError" />

    <script>
        // FIX: Updated the toggleDropdown function to be more robust.
        function toggleDropdown(button) {
            // Find the specific dropdown menu related to the clicked button.
            const dropdownContainer = button.closest('.relative.inline-block');
            const menu = dropdownContainer.querySelector('.dropdown-menu');

            // Check if the menu is currently hidden.
            const isHidden = menu.classList.contains('hidden');

            // First, close all other open dropdowns on the page.
            document.querySelectorAll('.dropdown-menu').forEach(m => {
                m.classList.add('hidden');
            });

            // If the menu was hidden, show it. This creates the toggle effect.
            if (isHidden) {
                menu.classList.remove('hidden');
            }
        }

        // This listener closes any open dropdown when you click outside of it.
        document.addEventListener('click', function (e) {
            // If the click was not inside a dropdown container, close all menus.
            if (!e.target.closest('.relative.inline-block')) {
                document.querySelectorAll('.dropdown-menu').forEach(menu => {
                    menu.classList.add('hidden');
                });
            }
        });

        function showDeleteModal(userId, fullName, userIdDisplay, email, role) {
            document.getElementById('userToDelete').textContent = fullName;
            document.getElementById('userId').value = userId;
            document.getElementById('userIdDisplay').textContent = userIdDisplay;
            document.getElementById('userEmailDisplay').textContent = email;
            document.getElementById('userRoleDisplay').textContent = role;
            document.getElementById('popupModal').classList.remove('hidden');
            document.getElementById('modalBackdrop').classList.remove('hidden');
            document.body.style.overflow = 'hidden';
            document.querySelectorAll('.dropdown-menu').forEach(m => {
                m.classList.add('hidden');
            });

        }

        function hideModal() {
            document.getElementById('popupModal').classList.add('hidden');
            document.getElementById('modalBackdrop').classList.add('hidden');
            document.body.style.overflow = '';
        }

        function clearSearchBar() {
            const searchInput = document.getElementById('searchQuery');
            searchInput.value = '';
            searchInput.dispatchEvent(new Event('input'));
        }

        function clearAllFilters() {
            // Get the base URL without query parameters
            const baseUrl = window.location.origin + '@Url.Action("Index", "Users")';

            // Navigate to the clean URL
            window.location.href = baseUrl;
        }
    </script>
}
